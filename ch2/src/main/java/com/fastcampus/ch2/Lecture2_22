redirect와 forward
1.redirect와 forward의 처리과정 비교
	redirect
	요청도 두번이고 응답도 두번!
	
	forward
	클라이언트가 요청을한다! -> 본인이 처리해야할것이 아니면 '전달'을해준다 사용자의 요구사항을
	ex) 고객이 카드분실했다고 분실신고! 전화를함 그런데 받은 부서가 한도조회를 하는 부서여서 그 요구사항을 못들어줌 그런데 한도조회를 하는 부서가 그 요구사항을 분실신고부서에 전해주고 분실신고부서에서 응답을 해주는것! 
	클라이언트는 누가 처리했는지 알 수 없음!
	request 객체가 모델역할을 하고 있는것이다. 처음에 받은 한도조회부서가 Controller 역할을 분실신고부서가 View 역할을 수행한다고 보면된다.
	MVC패턴을 여기서 볼 수 있다! forward를 이용해서
	
2.RedirectView
	스프링에서는 디스페쳐 서블릿이 요청을 받아서 컨트롤러에 넘긴다.
	컨트롤러는 응답헤더를 만들어서내서 클라이언트에게 응답한다.
	
3.JstlView
	레지스터에다가 요청 -> 디스페쳐서블릿이 받는다 -> 컨트롤러에게 요청을한다. -> 레지스터폼(뷰이름)을 다시 디스페쳐 서블릿이 받음 -> jstlView롤 보낸다. -> jstlView가 registerForm.jsp 를만들어서 최종 응답을 한다.
	JSTL은 jsp뷰를 처리하는곳 보통은 뷰 이름을 컨트롤러레지스터가 반환.
	
4.InternalResoutrceView
	forward할때 사용되는뷰!
	레지스터요청이오면 디스페쳐서블릿이 받아서 컨트롤러에 보낸다. 
	
5.forward의 예시
	어떨때 사용??
	은행에서 1년치 입출금 내역을 출력하고싶다! -> 그걸 다운로드 받고싶어서 다운로드 요청 -> /download?type=pdf : pdf로 받을래 -> 타입에 따른 View를 만들어주는 View에게 넘겨준다 forward를