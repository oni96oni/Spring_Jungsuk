관심사의 분리,MVC패턴-실습
	 1. 입력
		String year = request.getParameter("year");
		String month = request.getParameter("month");
		String day = request.getParameter("day");

		int yyyy = Integer.parseInt(year);
		int mm = Integer.parseInt(month);
		int dd = Integer.parseInt(day);

	이부분들이 필요없어짐! 매개변수로 year, month, day받고 애초에 int로 받으니 문자열 int로 변환해주는 과정도 필요없어진것!
	
	url맵핑은 중복되는부분이 있으면 충돌나므로 있어선안된다.
	
	jsp파일에 값이 들어갈자리를 만들어주는것을 EL(Expression Language)이라고한다.
		${year } 이런식으로
	
	5.modelAndView
		args에다가 Model생성안해주면 따로 ModelAndView mv = new ModelAndView(); 이렇게 생성해줘야해
		결과저장하고 그다음에 뷰지정하고 리턴해준다 mv를! 그러면 이제 뷰한테 전달해준다. 결국 똑같은것! Model생성해주나 안해주나 
		ModelAndView는 잘안쓰고 반환타입 String으로해서 뷰이름을 반환하게끔하는 방법을 많이 쓴다!
		
	6.★컨트롤러 메서드의 반환타입
		반환타입이 String인 경우에는 뷰이름을 반환
		반환타입이 void인 경우에는 맵핑된 url의 끝단어가 뷰이름
		반환타입이 ModelAndView인 경우에는 Model과 뷰이름을 반환
		
YoilTellerMVC 이런식으로 수정도 가능/ 하지만 Main에 Model 매개변수 없으면 MethodCall2 수업을 진행할때 에러발생 여기다가 흔적남겨놓고 참고할게~

@Controller
public class YoilTellerMVC {
		@RequestMapping("/getYoilMVC")
		public ModelAndView main(int year, int month, int day) throws IOException {
			//이 String이 view의 이름이다.
			
			ModelAndView mv = new ModelAndView();
			//1.유효성 검사
			
			// 2. 요일 계산
			char yoil = getYoil(year, month, day);
			
			// 3. 계산한 결과를 model에 저장
			mv.addObject("year", year);
			mv.addObject("month", month);
			mv.addObject("day", day);
			mv.addObject("yoil", yoil);
			
			// 4. 결과를 보여줄 view를 지정
			mv.setViewName("yoil");
			
			return mv;
	}
}