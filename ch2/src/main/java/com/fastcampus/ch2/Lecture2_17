@RequestParam과 @ModelAttribute
	1.@RequestParam
		요청의 파라미터를 연결할 매개변수에 붙이는 애너테이션으로써 생략가능, required 는 필수여부
		required가 false일때 매개변수를 아예 안주면 null값을 출력한다.
		required가 true일때 매개변수를 아예 안주면 null값은 400번대에러(클라이언트 에러), 참고로 500번대 에러는 서버에러
		매개변수만 넣고 값을 안주면 "" 빈값 - 에러는 아니다.
		★필수입력이 아닐때에는 기본입력값을 주어야한다.
		
		int값 매개변수, required=false 인경우 ( 변환까지 해주어야한다는게 String과 다르다. )
			필수입력이 아니어서 아무것도 안넣으면 값에 null이 들어온다. 하지만 null은 int로 변환할수 없으므로 에러발생 - 500번대 에러
			year만 넣고 값을 안넣으면 빈문자열 또한 int로 바꿀 수 없으므로 에러발생 - 400번대 에러
			
			-> 그래서 필수입력이 아닐때에는 기본값이 있어야해!
			
		int값 매개변수, required=true 인경우
		 	필수입력인데 아무것도 안넣어서 에러발생 - 400번대 에러
		 	값을 주긴했지만 잘못줘서 에러발생 - 400번대 에러
		 	
		서버에서 오류메시지를보여주는것은 적절하지 못하다! 이럴땐 에러처리가 필요해 에러발생하면 특정페이지로 고고
			ExceptionHandler가 붙으면 괄호안에 있는 예외가 발생했을때 메서드가 호출. 처리한 결과를 yoilError뷰를 반환.
			required=true 인경우에 값을 입력안하면 에러발생 이럴때 에러처리!
			required=false 인경우에는 default값을 꼭 설정하자!
			
		yoilTellerMVC4처럼 year, month, day를 하나로 묶어서 Date로 처리하면 장점은 받을값들이 많아지거나 줄어들어도 코드변경할 필요가없다.
			물론 MyDate는 변경해주어야겠지?