@GetMapping, @PostMapping
	get방식으로 회원가입을 못하게 막을거야! 도메인으로 가입가능하기에 무분별한 회원가입이 가능하면 문제발생!
	
	pom.xml에서 스프링버전 업그레이드

	@RequestMapping(value="/register/save", method={RequestMethod.GET, RequestMethod.POST})
	@RequestMapping("/register/add")
	@GetMapping("/register/add")
	
	@RequestMapping(value="/register/save", method=RequestMethod.POST)
	@PostMapping("/register/save")
	
	register()가 하는 일이 없다. 왜? registerForm하고 /register/add url을 연결해줄 뿐이지 실제로는 하는일이 없어 그래서 
	servlet-context에다가 view-controller로 등록 
	등록하면은 view를 view컨트롤러로 등록해놓으면 되는것 설정파일에서 url하고 registerForm하고 연결해주는것!!
	
	★그러면 @GetMapping이 없어지니까 GET과 POST 둘다 되는거아니야? 라고 생각할 수 도 있다. 하지만 GetMapping에 쓰인 url 주소는 /register/add이다. 
	여기서는 그저 단순히 화면을 보여주기만 할뿐이야! /register/save가 post요청만을 허락하는거니까 view-controller로 @GetMapping을 바꿔버려도 괜찮은것이다!
	
	빈즈태그에서 xmlns = xml name space들중 하나의 이름(접두사) 생략가능! 각 스키마에서 정의한 태그들을 사용하기 위해서 접두사를 등록한것!
	다른것 다 접두사 적혀져 있고 나머지 한가지 생략이면 프로그램이 알아서 생략된게 무엇인지 알아서 채워넣기때문에! 이름은 mvc, xsi, beans, context가 있는듯 하다.
	
	view-Controller로 등록한 컨트롤러는 GET요청만 가능하다 POST요청은 허락하지 않는다.
	
	우리가 브라우저에 직접 한글을 입력하면 브라우저가 자동으로 인코딩을 해준다. 하지만 우리가 컨트롤러에서 직접 url을 만들면 브라우저가 url인코딩을 해줄수가 없다.
	이럴때 우리가 직접 url인코딩을 해주어야해! 그럴때 쓰는 클래스가 URLEncoder사용! 메소드는 encode()
	
	인코딩한걸 다시 디코딩을 해주어야한다! 그래서 해당하는 부분을 jsp에서 찾아서 URLDecoder클래스 메서드를 사용해주어야 한다.
	
	인코딩을하는 또 다른 방법으로는 모델을 이용하는 방법이 있다.
	
	넘겨줘야할 값이 여러개일 때는 모델에 담아서 보내주는게 좋다
	
	스프링에서 model에 있는 데이터를 가지고 뒤에다가 붙여준다
	원래 RegisterController에 save()에 있는 모델은 뷰에 전달하기 위한건데, 지금은 redirect를 써서 응답을 한다 그러면 model로 전달할 수가 없다.
	redirect는 재요청의 의미! redirect를 사용할 수가 없다!
	model이 이미 /save에서 사용중이기 때문에 /add에서 사용할수 없지만, addAttribute사용 ★스프링이 자동으로 변환해준다!
	
	
	
		