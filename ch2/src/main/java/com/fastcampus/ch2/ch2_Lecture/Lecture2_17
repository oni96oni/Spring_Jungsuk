@RequestParam과 @ModelAttribute
	1.@RequestParam
		요청이 왔을때 넘어온 파라미터를 연결할 매개변수에 붙이는 애너테이션으로써 생략가능, required 는 필수여부
			public String main2(@RequestParam(name="year" required=false) String year)
			public String main2(String year)
			이 위의 두 문장은 동일한 문장! 위에가 생략되어서 아래처럼 된것이다.
		required가 false일때 매개변수를 아예 안주면 null값을 출력한다.
			public String main2(@RequestParam(name="year" required=true) String year)
			public String main2(@RequestParam String year)
			★즉! 매개변수앞에 @RequestParam 가 붙어있으면 required값이 true! 안붙어있으면 false이다.
		required가 true일때 매개변수를 아예 안주면 null값은 400번대에러(클라이언트 에러), 참고로 500번대 에러는 서버에러
		매개변수만 넣고 값을 안주면 "" 빈문자열이 들어온다. - 에러는 아니다.
		★필수입력이 아닐때에는 기본입력값을 주어야한다.
		
		int값 매개변수, required=false 인경우 ( int는 변환까지 해주어야한다는게 String과 다르다. )
			필수입력이 아니어서 아무것도 안넣으면 값에 null이 들어온다. 하지만 null은 int로 변환할수 없으므로 에러발생 - 500번대 에러
			year만 넣고 값을 안넣으면 빈문자열 또한 int로 바꿀 수 없으므로 에러발생 - 400번대 에러
			
			-> 그래서 필수입력이 아닐때에는 기본값(ex:defaultValue="1")이 있어야해!
			
		int값 매개변수, required=true 인경우
		 	필수입력인데 아무것도 안넣어서 에러발생 - 400번대 에러
		 	값을 주긴했지만 잘못줘서 에러발생 - 400번대 에러
		 	
		서버에서 오류메시지를보여주는것은 적절하지 못하다! 이럴땐 에러처리가 필요해 에러발생하면 특정페이지로 고고
			ExceptionHandler가 붙으면 괄호안에 있는 예외가 발생했을때 메서드가 호출. 처리한 결과를 yoilError뷰를 반환.
			required=true 인경우에 값을 입력안하면 에러발생 이럴때 에러처리!
			required=false 인경우에는 default값을 꼭 설정하자!
			
		빈문자열은 int로 당연히 변환할 수 없다!
		
		예외가 발생했는데 에러 로그가 안보이는 이유는 예외 처리하면서 그 부분을 감추는것!
		log4j가서 logWeb을 info에서 trace로 바꾸면 확인이 가능하다.
		
		입력받을 매개변수가 많을때는 클래스를 만들어서 입력받을 매개변수를 줄여줄 수가 있다.
		yoilTellerMVC4처럼 year, month, day를 하나로 묶어서 Date로 처리하면 장점은 받을값들이 많아지거나 줄어들어도 코드변경할 필요가없다.
			물론 MyDate는 변경해주어야겠지?
			
		타입으로 넘어온 객체
		
		SetterCall클래스 예제로 요청할때 넘어오는 값과 받는 서블릿의 매개변수가 이름이 다를때 어떻게 스프링에서 넣어주는지 이해해보자