관심사의 분리,MVC패턴-실습

		String year = request.getParameter("year");
		String month = request.getParameter("month");
		String day = request.getParameter("day");

		int yyyy = Integer.parseInt(year);
		int mm = Integer.parseInt(month);
		int dd = Integer.parseInt(day);

	이부분들이 필요없어짐! 매개변수로 year, month, day받고 애초에 int로 받으니 문자열 int로 변환해주는 과정도 필요없어진것!
	
	출력하는 부분은 별도의 JSP파일로 빼낸다.
	
	url맵핑은 중복되는부분이 있으면 충돌나므로 있어선안된다.
	
	jsp파일에 값이 출력될 자리를 만들어주는것을 EL(Expression Language)이라고한다.
	${year } 이런식으로 작성, 그러면 View단에서 모델 객체의 값들에서 해당 이름에 맞는 값들을 꺼내서 완성한뒤 클라이언트에게 응답한다.
	
	출력이라는 관심사는 model값을 jsp파일로 받아서 응답함으로써 관심사를 분리함.
	
	반환타입을 안주면 mapping된 url에 의해서 뷰 이름이 결정된다. 맵핑된 주소로 반환을 한다!
	
	5.modelAndView
		매개 변수에 다가 Model을 넣지않으면 따로 ModelAndView mv = new ModelAndView(); 이렇게 직접 생성해줘야해
		작업한 결과 저장하고 그다음에 뷰 지정(mv.setViewName("yoil"); 이런식으로)하고 리턴해준다 mv를! 그러면 이제 뷰한테 전달해준다. 
		Model생성해주나 안해주나 결국 똑같은것!
		ModelAndView는 잘안쓰고 반환타입 String으로해서 뷰이름을 반환하게끔하는 방법(매개변수에 Model사용)을 많이 쓴다!
		
		
	6.★컨트롤러 메서드의 반환타입
		반환타입이 String인 경우에는 뷰이름을 반환
		반환타입이 void인 경우에는 맵핑된 url의 끝단어가 뷰이름
		반환타입이 ModelAndView인 경우에는 Model과 뷰이름을 반환
		
YoilTellerMVC 이런식으로 수정도 가능/ 하지만 Main에 Model 매개변수 없으면 MethodCall2 수업을 진행할때 에러발생 여기다가 흔적남겨놓고 참고할게~

@Controller
public class YoilTellerMVC {
		@RequestMapping("/getYoilMVC")
		public ModelAndView main(int year, int month, int day) throws IOException {
			//이 String이 view의 이름이다.
			
			ModelAndView mv = new ModelAndView();
			//1.유효성 검사
			
			// 2. 요일 계산
			char yoil = getYoil(year, month, day);
			
			// 3. 계산한 결과를 model에 저장
			mv.addObject("year", year);
			mv.addObject("month", month);
			mv.addObject("day", day);
			mv.addObject("yoil", yoil);
			
			// 4. 결과를 보여줄 view를 지정
			mv.setViewName("yoil");
			
			return mv;
	}
}