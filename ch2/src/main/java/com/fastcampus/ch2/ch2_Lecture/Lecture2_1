원격 프로그램 실행
	1.로컬 프로그램 실행
		커맨드라인에서 실행한다면 java.클래스이름
		자바 인터프리터(java.exe)가 클래스에 있는 main()를 실행.
		인터프리터가 main()호출할 수 있는 이유? -> static이어서, static이 아니면 객체를 생성해야한다!
		
	2.원격 프로그램 실행
		다른 사람의 컴퓨터에있는 프로그램을 실행하는법! 브라우저, WAS(톰캣, 원격컴퓨터에)가 있어야 원격 프로그램 실행이 가능하다.
		브라우저로 서버에있는 프로그램을 실행하기 위해서 해야할것 두가지
			1. 프로그램등록. 프로그램을 외부에서 호출할 수 있게 등록!
			2. URL과 프로그램을 연결.
		연결해야지 원격프로그램 실행이 가능하다. 
		
		@Controller -> 1.프로그램 등록
		@RequestMapping -> 2. URL과 main()메서드를 연결
		메소드 이름이 중요한게 x , @RequestMapping이 붙어있는 url이 중요하다!
		
		url과 메서드연결 -> 이것이 맵핑이다!
		
		context root = project root , @RequestMapping("/hello")앞에 생략되는부분 (ex: http:// ~ )  
	
	실습
		인스턴스메서드(static이 없는데)인데 어떻게 main()메서드가 실행이 됬을까? (Hello.java파일이 실행된 이유?)
		
		호출했을때 인스턴스 메서드(객체를 생성해야 호출가능)를 중간에서 누군가가 객체를 생성해준것이다! 바로 톰캣이!
		
		즉, 호출이 오면 ★★톰캣이 내부에서 객체를 생성해준다!!
		
		인스턴스메서드가 더 유용하다! 그래서 static메서드보다 인스턴스메서드 사용
		
		private을 사용해도 호출 가능! 차이점은? 
		private이라서 외부 호출 불가 아까 Hello.java에서 main()가 호출된 이유는? Reflection API를 사용 - 클래스 정보를 얻고 다룰 수 있는 강력한 기능을 제공
		java.lang.reflect패키지를 제공
		
		클래스 정보를 이용해서 객체를 만들 수 있다! 클래스에 대한 정보를 모두 갖고 있기때문에 가능하다. 클래스는 설계도, 설계도가 있으면 객체를 만들 수 있고 멤버도 알 수 있다.
		