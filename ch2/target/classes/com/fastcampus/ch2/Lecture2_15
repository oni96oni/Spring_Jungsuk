서블릿과 JSP
9.URL패턴
	@WebServlet으로 서블릿을 URL에 맵핑할 때 사용
	배열로 여러개 등록가능
	loadOnStartup은 미리 초기화, 그 뒤에 숫자는 우선순위
	서블릿은 기본적으로 lazy init:늦은초기화이다
	패턴종류는 크게 4가지 각각 우선순위가 존재한다.
		1.exact mapping : 정확히 일치하는게 우선순위가 높다. ; /login/hello.do
		2.path mapping : 경로맵핑 ; /login/*
		3.extension mapping : 확장자맵핑 ; *.do (do가 확장자)
		4.default mapping : 위에 해당사항이 없으면 마지막으로 디폴트 맵핑으로 간다. 모든주소하고 맵핑이 됨 ; / 
	@WebServlet은 스프링에서는 @Request Mapping에 해당한다 스프링에도 이런 URL패턴이 존재한다.
	
	Servlet Context안에 서블릿이라는 맵이 존재 + 서블릿맵핑이라는 맵도 존재한다.
		요청이 오면 서블릿맵핑이 먼저 확인 : URL패턴을 확인하여 요청과 일치하는것이 있는가 확인
		요청의 마지막 부분에 해당하는 URL을 보고 일치하는것 확인한다.
		해당하는 것이 있으면 동적리소스(서블릿) 해당하는 것이 없으면 정적리소스(image,css,txt파일같은 것들) or 404 not found로 처리 	
		요청이 왔는데 요청과 맵핑되는 것이 없으면 디스패쳐 서블릿(Dispatcher Servlet)이 요청을 다 받는다. 디스패쳐 서블릿 내부에서 맵핑을 가지고 있어서 맵핑으로 다시 처리한다.
		
10.EL(Expression Language) <%=값%> 를 ${값}(이것이 EL이다)으로 변경하기 위해서
	간단하고 편리하게 해준다.
	C:\Users\rainb\Documents\workspace-sts-3.9.18.RELEASE\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\work\Catalina\localhost\ch2\org\apache\jsp
	여기가 jsp파일이 변환된것이 저장되는 주소
	scope가 없으면 page - request - session - application 순서로 주어진 단어가 있는지 계속 찾는다 그래서 생략이 가능하다. el.jsp파일 21번째줄 requestScope가 생략되고 name만 남음. el.jsp파일 톰캣실행해서 3개씩 나오는 이유는 3개씩 모두 동일한것인데 코드의 생략을 보여주기 위함이다.
	el은 null을 출력하지 않는다.
	el에서는 "1"이 숫자로 바뀌어서 "1"+1가  2 라고 출력 된다. null은 0으로 바뀐다. ""도 0으로 바뀐다.
	empty는 null인지 빈 컬렉션 배열인지 확인하고 비어있으면 true를 반환.
	ne는 not equal이다.